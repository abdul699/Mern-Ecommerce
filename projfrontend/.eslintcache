[{"C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\index.js":"1","C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\App.js":"2","C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\Routes.js":"3","C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\core\\Home.js":"4","C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\backend.js":"5","C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\core\\Base.js":"6","C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\core\\Menu.js":"7","C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\user\\Signup.js":"8","C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\user\\Signin.js":"9","C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\auth\\helper\\index.js":"10","C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\auth\\helper\\AdminRoutes.js":"11","C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\auth\\helper\\PrivateRoutes.js":"12","C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\user\\UserDashBoard.js":"13","C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\user\\AdminDashBoard.js":"14","C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\admin\\AddCategory.js":"15","C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\admin\\helper\\adminapicall.js":"16","C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\admin\\AddProduct.js":"17","C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\admin\\ManageCategories.js":"18","C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\admin\\ManageProducts.js":"19","C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\admin\\UpdateProduct.js":"20","C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\core\\Contact.js":"21","C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\core\\Card.js":"22","C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\core\\helper\\ImageHelper.js":"23","C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\core\\helper\\coreapicalls.js":"24","C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\core\\helper\\CartHelper.js":"25","C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\core\\helper\\cartHelper.js":"26","C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\core\\Cart.js":"27"},{"size":155,"mtime":1609065758110,"results":"28","hashOfConfig":"29"},{"size":528,"mtime":499162500000,"results":"30","hashOfConfig":"29"},{"size":1722,"mtime":1610108031083,"results":"31","hashOfConfig":"29"},{"size":1023,"mtime":1610101592250,"results":"32","hashOfConfig":"29"},{"size":50,"mtime":1609065758139,"results":"33","hashOfConfig":"29"},{"size":1153,"mtime":1610110524600,"results":"34","hashOfConfig":"29"},{"size":2230,"mtime":1609072338327,"results":"35","hashOfConfig":"29"},{"size":3324,"mtime":1609069820906,"results":"36","hashOfConfig":"29"},{"size":3183,"mtime":1609072214488,"results":"37","hashOfConfig":"29"},{"size":1351,"mtime":1609065758460,"results":"38","hashOfConfig":"29"},{"size":622,"mtime":1609071108914,"results":"39","hashOfConfig":"29"},{"size":590,"mtime":1609071120261,"results":"40","hashOfConfig":"29"},{"size":253,"mtime":1609071390421,"results":"41","hashOfConfig":"29"},{"size":2986,"mtime":1610113055522,"results":"42","hashOfConfig":"29"},{"size":2668,"mtime":1609663548126,"results":"43","hashOfConfig":"29"},{"size":3210,"mtime":1610092352871,"results":"44","hashOfConfig":"29"},{"size":5903,"mtime":1609679648426,"results":"45","hashOfConfig":"29"},{"size":2381,"mtime":1610097711438,"results":"46","hashOfConfig":"29"},{"size":2734,"mtime":1609677822936,"results":"47","hashOfConfig":"29"},{"size":6762,"mtime":1610090615874,"results":"48","hashOfConfig":"29"},{"size":342,"mtime":1609681145846,"results":"49","hashOfConfig":"29"},{"size":2377,"mtime":1610110284021,"results":"50","hashOfConfig":"29"},{"size":662,"mtime":1610105004122,"results":"51","hashOfConfig":"29"},{"size":234,"mtime":1610106098146,"results":"52","hashOfConfig":"29"},{"size":609,"mtime":1610109690199,"results":"53","hashOfConfig":"29"},{"size":609,"mtime":1610109690199,"results":"54","hashOfConfig":"29"},{"size":835,"mtime":1610108339986,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"1s3qdtq",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"58"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\index.js",[],["117","118"],"C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\App.js",[],"C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\Routes.js",[],"C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\core\\Home.js",["119"],"import React, { useEffect, useState } from \"react\";\nimport \"../styles.css\";\nimport Base from \"./Base\";\nimport Card from \"./Card\";\nimport { getProducts } from \"./helper/coreapicalls\";\n\nexport default function Home() {\n  const [products, setProducts] = useState([])\n  const [error, setError] = useState(false)\n\n  const loadAllProducts = () => {\n    getProducts()\n    .then(data => {\n      if(data.error) {\n        setError(data.error)\n      }\n      else {\n        setProducts(data)\n      }\n    })\n  }\n\n  useEffect(() => {\n    loadAllProducts()\n  }, [])\n\n  return (\n    <Base title=\"Home Page\" description=\"Welcome to the Tshirt Store\">\n      <div className=\"row text-center\">\n        <h1 className=\"text-white\">All of the Tshirts</h1>\n        <div className=\"row\">\n          {products.map((product, index) => {\n            return(\n              <div key={index} className=\"col-4 mb-4\">\n                <Card product={product}/>\n              </div>\n            )\n          })}\n        </div>\n\n      </div>\n    </Base>\n  );\n}\n","C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\backend.js",[],"C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\core\\Base.js",[],"C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\core\\Menu.js",[],"C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\user\\Signup.js",[],"C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\user\\Signin.js",["120"],"import React, { useState } from \"react\";\nimport Base from \"../core/Base\";\nimport { Link, Redirect } from \"react-router-dom\";\n\nimport { signin, authenticate, isAutheticated } from \"../auth/helper\";\n\nconst Signin = () => {\n  const [values, setValues] = useState({\n    email: \"\",\n    password: \"\",\n    error: \"\",\n    loading: false,\n    didRedirect: false\n  });\n\n  const { email, password, error, loading, didRedirect } = values;\n  const { user } = isAutheticated();\n\n  const handleChange = name => event => {\n    setValues({ ...values, error: false, [name]: event.target.value });\n  };\n\n  const onSubmit = event => {\n    event.preventDefault();\n    setValues({ ...values, error: false, loading: true });\n    signin({ email, password })\n      .then(data => {\n        if (data.error) {\n          setValues({ ...values, error: data.error, loading: false });\n        } else {\n          authenticate(data, () => {\n            setValues({\n              ...values,\n              didRedirect: true\n            });\n          });\n        }\n      })\n      .catch(console.log(\"signin request failed\"));\n  };\n\n  const performRedirect = () => {\n\n    if (didRedirect) {\n      if (user && user.role === 1) {\n        return <Redirect to=\"/admin/dashboard\" />\n      } else {\n        return <Redirect to=\"/user/dashboard\" />\n      }\n    }\n\n    if (isAutheticated()) {\n      return <Redirect to=\"/\" />;\n    }\n  };\n\n  const loadingMessage = () => {\n    return (\n      loading && (\n        <div className=\"alert alert-info\">\n          <h2>Loading...</h2>\n        </div>\n      )\n    );\n  };\n\n  const errorMessage = () => {\n    return (\n      <div className=\"row\">\n        <div className=\"col-md-6 offset-sm-3 text-left\">\n          <div\n            className=\"alert alert-danger\"\n            style={{ display: error ? \"\" : \"none\" }}\n          >\n            {error}\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const signInForm = () => {\n    return (\n      <div className=\"row\">\n        <div className=\"col-md-6 offset-sm-3 text-left\">\n          <form>\n            <div className=\"form-group\">\n              <label className=\"text-light mt-2 mb-2\">Email</label>\n              <input\n                onChange={handleChange(\"email\")}\n                value={email}\n                className=\"form-control\"\n                type=\"email\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label className=\"text-light mt-2 mb-2\">Password</label>\n              <input\n                onChange={handleChange(\"password\")}\n                value={password}\n                className=\"form-control\"\n                type=\"password\"\n              />\n            </div>\n            <button onClick={onSubmit} className=\"btn btn-success btn-block form-control mt-4\">\n                Submit\n              </button>\n          </form>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <Base title=\"Sign In page\" description=\"A page for user to sign in!\">\n      {loadingMessage()}\n      {errorMessage()}\n      {signInForm()}\n      {performRedirect()}\n      <p className=\"text-white text-center\">{JSON.stringify(values)}</p>\n    </Base>\n  );\n};\n\nexport default Signin;\n","C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\auth\\helper\\index.js",[],"C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\auth\\helper\\AdminRoutes.js",[],"C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\auth\\helper\\PrivateRoutes.js",[],"C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\user\\UserDashBoard.js",[],"C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\user\\AdminDashBoard.js",["121"],"C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\admin\\AddCategory.js",[],"C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\admin\\helper\\adminapicall.js",[],"C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\admin\\AddProduct.js",["122","123","124","125"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { isAutheticated } from '../auth/helper/index';\r\nimport Base from '../core/Base'\r\nimport { createaProduct, getAllCategories } from './helper/adminapicall';\r\n\r\n\r\nconst AddProduct = () => {\r\n\r\n    const {user, token} = isAutheticated();\r\n\r\n    const [values, setValues] = useState({\r\n        name: \"\",\r\n        description: \"\",\r\n        price: \"\",\r\n        stock: \"\",\r\n        photo: \"\",\r\n        categories: [],\r\n        category: \"\",\r\n        loading: false,\r\n        error: \"\",\r\n        createdProduct: \"\",\r\n        getaRedirect: false,\r\n        formData: \"\"\r\n    });\r\n\r\n    const { \r\n        name, \r\n        description, \r\n        price, \r\n        stock,\r\n        categories, \r\n        category, \r\n        loading, \r\n        error, \r\n        createdProduct, \r\n        getaRedirect, \r\n        formData\r\n    } = values;\r\n\r\n    const preload = () => {\r\n        getAllCategories().then(data => {\r\n            // console.log(data)\r\n            if(data.error) {\r\n                setValues({ ...values, error: data.error});\r\n            }\r\n            else {\r\n                setValues({ ...values, categories: data, formData: new FormData() });\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n          preload();\r\n    }, []);\r\n\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n        setValues({...values, error: \"\", loading: true});\r\n        createaProduct(user._id, token, formData)\r\n        .then(data => {\r\n            if(data.error) {\r\n                setValues({...values, error: data.error});\r\n            }\r\n            else {\r\n                setValues({\r\n                    ...values, \r\n                    name: \"\",\r\n                    description: \"\",\r\n                    price: \"\",\r\n                    photo: \"\",\r\n                    stock: \"\",\r\n                    loading: false,\r\n                    createdProduct: data.name\r\n                })\r\n            }\r\n        })\r\n        .catch(err => console.log(\"ERR: \", err))\r\n    }\r\n\r\n    const handleChange = name => event => {\r\n        const value = name === \"photo\" ? event.target.files[0] : event.target.value;\r\n        formData.set(name, value);\r\n        setValues({...values, [name]: value});\r\n    }\r\n\r\n    const successMessage = () => (\r\n        <div className=\"alert alert-success mt-3\"\r\n        style={{display : createdProduct ? \"\" : \"none\" }}>\r\n            <h4>{createdProduct} created successfully</h4>\r\n        </div>\r\n    )\r\n\r\n    const warningMessage = () => (\r\n        <div className=\"alert alert-danger mt-3\"\r\n        style={{display : error ? \"\" : \"none\" }}>\r\n            <h4>{error}</h4>\r\n        </div>\r\n    )\r\n\r\n    const createProductForm = () => (\r\n        <form >\r\n          <div className=\"form-group mt-2 mb-2\">\r\n            <label className=\"btn btn-block form-control btn-success\">\r\n                <span >Post photo: </span>\r\n              <input\r\n                onChange={handleChange(\"photo\")}\r\n                type=\"file\"\r\n                name=\"photo\"\r\n                accept=\"image\"\r\n                placeholder=\"choose a file\"\r\n              />\r\n            </label>\r\n          </div>\r\n          <div className=\"form-group mt-2 mb-2\">\r\n            <input\r\n              onChange={handleChange(\"name\")}\r\n              name=\"photo\"\r\n              className=\"form-control\"\r\n              placeholder=\"Name\"\r\n              value={name}\r\n            />\r\n          </div>\r\n          <div className=\"form-group mt-2 mb-2\">\r\n            <textarea\r\n              onChange={handleChange(\"description\")}\r\n              name=\"photo\"\r\n              className=\"form-control\"\r\n              placeholder=\"Description\"\r\n              value={description}\r\n            />\r\n          </div>\r\n          <div className=\"form-group mt-2 mb-2\">\r\n            <input\r\n              onChange={handleChange(\"price\")}\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              placeholder=\"Price\"\r\n              value={price}\r\n            />\r\n          </div>\r\n          <div className=\"form-group mt-2 mb-2\">\r\n            <select\r\n              onChange={handleChange(\"category\")}\r\n              className=\"form-control\"\r\n              placeholder=\"Category\"\r\n            >\r\n              <option>Select</option>\r\n              {categories && \r\n              categories.map((category, index) => (\r\n                  <option className=\"bg-dark text-white\" key={index} value={category._id}>{category.name}</option>\r\n              ))\r\n              }\r\n            </select>\r\n          </div>\r\n          <div className=\"form-group mt-2 mb-2\">\r\n            <input\r\n              onChange={handleChange(\"stock\")}\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              placeholder=\"Quantity\"\r\n              value={stock}\r\n            />\r\n          </div>\r\n          <button type=\"submit\" onClick={onSubmit} className=\"btn form-control btn-block btn-outline-success mt-2 mb-2\">\r\n            Create Product\r\n          </button>\r\n        </form>\r\n      );\r\n\r\n\r\n\r\n    const goBack = () => (\r\n        <div className=\"mt-5\">\r\n            <Link className=\"btn btn-sm btn-dark mb-3\" to=\"/admin/dashboard\">Admin Home</Link>\r\n        </div>\r\n    )\r\n\r\n    return (\r\n        <div>\r\n            <Base\r\n            title=\"Add a product here!\"\r\n            description=\"Add new Tshirt\"\r\n            className=\"container bg-info p-4\"\r\n            >\r\n                {goBack()}\r\n                <div className=\"row bg-dark text-white rounded\">\r\n                    <div className=\"col-md-8 offset-md-2\">\r\n                        {successMessage()}\r\n                        {warningMessage()}\r\n                        {createProductForm()}\r\n                    </div>\r\n                </div>\r\n            </Base>\r\n        </div>\r\n    )\r\n}\r\nexport default AddProduct; \r\n","C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\admin\\ManageCategories.js",["126"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { isAutheticated } from '../auth/helper'\r\nimport Base from '../core/Base'\r\nimport { deleteCategory, getAllCategories, updateCategory } from './helper/adminapicall'\r\n\r\n const ManageCategories = () => {\r\n\r\n    const [categories, setCategories] = useState([])\r\n\r\n    const {user, token} = isAutheticated();\r\n\r\n    const preload = () => {\r\n        getAllCategories()\r\n        .then(data => {\r\n            if(data.error) {\r\n                console.log(data.error)\r\n            }\r\n            else {\r\n                setCategories(data);\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        preload();\r\n    }, []);\r\n\r\n\r\n    const deleteThisCategory = categoryId => {\r\n        deleteCategory(categoryId, user._id, token)\r\n        .then(data => {\r\n            if(data.error) {\r\n                console.log(data.error)\r\n            }\r\n            else {\r\n                preload();\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Base title=\"Welcome admin\" description=\"Manage products here\">\r\n            <Link className=\"btn btn-info mb-2\" to={`/admin/dashboard`}>\r\n                <span className=\"\">Admin Home</span>\r\n            </Link>\r\n            <h2 className=\"mb-4\">All Categories:</h2>\r\n            <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                <h2 className=\"text-center text-white my-3\">Total {categories.length} Categories</h2>\r\n                {categories.map((category, index) => {\r\n                    return(\r\n                        <div key={index} className=\"row text-center mb-2 \">\r\n                            <div className=\"col-6\">\r\n                                <h3 className=\"text-white text-left\">{category.name}</h3>\r\n                            </div>\r\n                            <div className=\"col-6\">\r\n                                <button onClick={() => {\r\n                                    deleteThisCategory(category._id)\r\n                                }} className=\"btn btn-lg btn-outline-danger\">\r\n                                Delete\r\n                                </button>\r\n                            </div>\r\n                        </div>);\r\n                })}\r\n                </div>\r\n            </div>\r\n        </Base>\r\n\r\n    )\r\n}\r\nexport default ManageCategories\r\n","C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\admin\\ManageProducts.js",["127"],"import React, {useState, useEffect} from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { isAutheticated } from '../auth/helper';\r\nimport Base from '../core/Base';\r\nimport { deleteProduct, getAllProducts, updateProduct } from './helper/adminapicall';\r\n\r\nconst ManageProducts = () => {\r\n    const [products, setProducts] = useState([])\r\n\r\n    const {user, token} = isAutheticated();\r\n\r\n    const preload = () => {\r\n        getAllProducts()\r\n        .then(data => {\r\n            if(data.error) {\r\n                console.log(data.error)\r\n            }\r\n            else {\r\n                setProducts(data);\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        preload();\r\n    }, []);\r\n\r\n    const deleteThisProduct = productId => {\r\n        deleteProduct(productId, user._id, token)\r\n        .then(data => {\r\n            if(data.error) {\r\n                console.log(data.error)\r\n            }\r\n            else {\r\n                preload();\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Base title=\"Welcome admin\" description=\"Manage products here\">\r\n            <h2 className=\"mb-4\">All products:</h2>\r\n            <Link className=\"btn btn-info\" to={`/admin/dashboard`}>\r\n                <span className=\"\">Admin Home</span>\r\n            </Link>\r\n            <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                <h2 className=\"text-center text-white my-3\">Total {products.length} products</h2>\r\n                {products.map((product, index) => {\r\n                    return (\r\n                        <div key={index} className=\"row text-center mb-2 \">\r\n                            <div className=\"col-4\">\r\n                                <h3 className=\"text-white text-left\">{product.name}</h3>\r\n                            </div>\r\n                            <div className=\"col-4\">\r\n                                <Link\r\n                                className=\"btn btn-success\"\r\n                                to={`/admin/product/update/${product._id}`}\r\n                                >\r\n                                <span className=\"\">Update</span>\r\n                                </Link>\r\n                            </div>\r\n                            <div className=\"col-4\">\r\n                                <button onClick={() => {\r\n                                    deleteThisProduct(product._id)\r\n                                }} className=\"btn btn-danger\">\r\n                                Delete\r\n                                </button>\r\n                            </div>\r\n                        </div>);\r\n                })}\r\n                </div>\r\n            </div>\r\n        </Base>\r\n    )\r\n}\r\n\r\nexport default ManageProducts;","C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\admin\\UpdateProduct.js",["128","129","130","131","132"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { isAutheticated } from '../auth/helper/index';\r\nimport Base from '../core/Base'\r\nimport { getaProduct, getAllCategories, updateProduct } from './helper/adminapicall';\r\n\r\n\r\nconst UpdateProduct = ({match}) => {\r\n\r\n    const {user, token} = isAutheticated();\r\n\r\n    const [values, setValues] = useState({\r\n        name: \"\",\r\n        description: \"\",\r\n        price: \"\",\r\n        stock: \"\",\r\n        photo: \"\",\r\n        categories: [],\r\n        category: \"\",\r\n        loading: false,\r\n        error: \"\",\r\n        createdProduct: \"\",\r\n        getaRedirect: false,\r\n        formData: \"\"\r\n    });\r\n\r\n    const { \r\n        name, \r\n        description, \r\n        price, \r\n        photo,\r\n        stock,\r\n        categories, \r\n        category, \r\n        loading, \r\n        error, \r\n        createdProduct, \r\n        getaRedirect, \r\n        formData\r\n    } = values;\r\n\r\n    const preload = (productId) => {\r\n        getaProduct(productId).then(data => {\r\n            // console.log(data)\r\n            preloadCategories();\r\n            if(data.error) {\r\n                setValues({ ...values, error: data.error});\r\n            }\r\n            else {\r\n                setValues({ \r\n                    ...values,\r\n                    name: data.name,\r\n                    description: data.description,\r\n                    photo: data.photo,\r\n                    price: data.price,\r\n                    category: data.category._id,\r\n                    stock: data.stock,\r\n                    formData: new FormData(),\r\n                });\r\n            }\r\n        })\r\n    }\r\n\r\n    const preloadCategories = () => {\r\n        getAllCategories()\r\n        .then(data => {\r\n            if(data.error) {\r\n                setValues({ ...values, error: data.error});\r\n            }\r\n            else {\r\n                setValues({ \r\n                    categories: data,\r\n                    formData: new FormData()\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n          preload(match.params.productId);\r\n    }, []);\r\n\r\n    // TODO: need to work on it\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n        setValues({...values, error: \"\", loading: true});\r\n\r\n        updateProduct(match.params.productId, user._id, token, formData)\r\n        .then(data => {\r\n            if(data.error) {\r\n                setValues({...values, error: data.error});\r\n            }\r\n            else {\r\n                setValues({\r\n                    ...values, \r\n                    name: \"\",\r\n                    description: \"\",\r\n                    price: \"\",\r\n                    photo: \"\",\r\n                    stock: \"\",\r\n                    loading: false,\r\n                    createdProduct: data.name\r\n                })\r\n            }\r\n        })\r\n        .catch(err => console.log(\"ERR: \", err))\r\n    }\r\n\r\n    const handleChange = name => event => {\r\n        const value = name === \"photo\" ? event.target.files[0] : event.target.value;\r\n        formData.set(name, value);\r\n        setValues({...values, [name]: value});\r\n    }\r\n\r\n    const successMessage = () => (\r\n        <div className=\"alert alert-success mt-3\"\r\n        style={{display : createdProduct ? \"\" : \"none\" }}>\r\n            <h4>{createdProduct} Update successfully</h4>\r\n        </div>\r\n    )\r\n\r\n    const warningMessage = () => (\r\n        <div className=\"alert alert-danger mt-3\"\r\n        style={{display : error ? \"\" : \"none\" }}>\r\n            <h4>{error}</h4>\r\n        </div>\r\n    )\r\n\r\n    const createProductForm = () => (\r\n        <form >\r\n          <div className=\"form-group mt-2 mb-2\">\r\n            <label className=\"btn btn-block form-control btn-success\">\r\n                <span >Post photo: </span>\r\n              <input\r\n                onChange={handleChange(\"photo\")}\r\n                type=\"file\"\r\n                name=\"photo\"\r\n                accept=\"image\"\r\n                placeholder=\"choose a file\"\r\n              />\r\n            </label>\r\n          </div>\r\n          <div className=\"form-group mt-2 mb-2\">\r\n            <input\r\n              onChange={handleChange(\"name\")}\r\n              name=\"photo\"\r\n              className=\"form-control\"\r\n              placeholder=\"Name\"\r\n              value={name}\r\n            />\r\n          </div>\r\n          <div className=\"form-group mt-2 mb-2\">\r\n            <textarea\r\n              onChange={handleChange(\"description\")}\r\n              name=\"photo\"\r\n              className=\"form-control\"\r\n              placeholder=\"Description\"\r\n              value={description}\r\n            />\r\n          </div>\r\n          <div className=\"form-group mt-2 mb-2\">\r\n            <input\r\n              onChange={handleChange(\"price\")}\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              placeholder=\"Price\"\r\n              value={price}\r\n            />\r\n          </div>\r\n          <div className=\"form-group mt-2 mb-2\">\r\n            <select\r\n              onChange={handleChange(\"category\")}\r\n              className=\"form-control\"\r\n              placeholder=\"Category\"\r\n            >\r\n              <option>Select</option>\r\n              {categories && \r\n              categories.map((category, index) => (\r\n                  <option className=\"bg-dark text-white\" key={index} value={category._id}>{category.name}</option>\r\n              ))\r\n              }\r\n            </select>\r\n          </div>\r\n          <div className=\"form-group mt-2 mb-2\">\r\n            <input\r\n              onChange={handleChange(\"stock\")}\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              placeholder=\"Quantity\"\r\n              value={stock}\r\n            />\r\n          </div>\r\n          <button type=\"submit\" onClick={onSubmit} className=\"btn form-control btn-block btn-outline-success mb-2 mt-2\">\r\n            Update Product\r\n          </button>\r\n        </form>\r\n      );\r\n\r\n\r\n\r\n    const goBack = () => (\r\n        <div className=\"mt-5\">\r\n            <Link className=\"btn btn-sm btn-dark mb-3\" to=\"/admin/dashboard\">Admin Home</Link>\r\n        </div>\r\n    )\r\n\r\n    return (\r\n        <div>\r\n            <Base\r\n            title=\"Add a product here!\"\r\n            description=\"Add new Tshirt\"\r\n            className=\"container bg-info p-4\"\r\n            >\r\n                {goBack()}\r\n                <div className=\"row bg-dark text-white rounded\">\r\n                    <div className=\"col-md-8 offset-md-2\">\r\n                        {successMessage()}\r\n                        {warningMessage()}\r\n                        {createProductForm()}\r\n                    </div>\r\n                </div>\r\n            </Base>\r\n        </div>\r\n    )\r\n}\r\nexport default UpdateProduct; \r\n","C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\core\\Contact.js",[],"C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\core\\Card.js",["133","134","135"],"C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\core\\helper\\ImageHelper.js",["136"],"C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\core\\helper\\coreapicalls.js",[],"C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\core\\helper\\CartHelper.js",[],"C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\core\\helper\\cartHelper.js",[],"C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\core\\Cart.js",["137","138","139","140","141"],{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","severity":1,"message":"147","line":9,"column":10,"nodeType":"148","messageId":"149","endLine":9,"endColumn":15},{"ruleId":"146","severity":1,"message":"150","line":3,"column":10,"nodeType":"148","messageId":"149","endLine":3,"endColumn":14},{"ruleId":"146","severity":1,"message":"151","line":9,"column":25,"nodeType":"148","messageId":"149","endLine":9,"endColumn":29},{"ruleId":"146","severity":1,"message":"152","line":33,"column":9,"nodeType":"148","messageId":"149","endLine":33,"endColumn":17},{"ruleId":"146","severity":1,"message":"153","line":34,"column":9,"nodeType":"148","messageId":"149","endLine":34,"endColumn":16},{"ruleId":"146","severity":1,"message":"154","line":37,"column":9,"nodeType":"148","messageId":"149","endLine":37,"endColumn":21},{"ruleId":"155","severity":1,"message":"156","line":55,"column":8,"nodeType":"157","endLine":55,"endColumn":10,"suggestions":"158"},{"ruleId":"146","severity":1,"message":"159","line":5,"column":44,"nodeType":"148","messageId":"149","endLine":5,"endColumn":58},{"ruleId":"146","severity":1,"message":"160","line":5,"column":41,"nodeType":"148","messageId":"149","endLine":5,"endColumn":54},{"ruleId":"146","severity":1,"message":"161","line":31,"column":9,"nodeType":"148","messageId":"149","endLine":31,"endColumn":14},{"ruleId":"146","severity":1,"message":"152","line":34,"column":9,"nodeType":"148","messageId":"149","endLine":34,"endColumn":17},{"ruleId":"146","severity":1,"message":"153","line":35,"column":9,"nodeType":"148","messageId":"149","endLine":35,"endColumn":16},{"ruleId":"146","severity":1,"message":"154","line":38,"column":9,"nodeType":"148","messageId":"149","endLine":38,"endColumn":21},{"ruleId":"155","severity":1,"message":"162","line":81,"column":8,"nodeType":"157","endLine":81,"endColumn":10,"suggestions":"163"},{"ruleId":"146","severity":1,"message":"164","line":1,"column":27,"nodeType":"148","messageId":"149","endLine":1,"endColumn":36},{"ruleId":"146","severity":1,"message":"165","line":13,"column":12,"nodeType":"148","messageId":"149","endLine":13,"endColumn":17},{"ruleId":"146","severity":1,"message":"166","line":13,"column":19,"nodeType":"148","messageId":"149","endLine":13,"endColumn":27},{"ruleId":"167","severity":1,"message":"168","line":10,"column":13,"nodeType":"169","endLine":15,"endColumn":15},{"ruleId":"146","severity":1,"message":"164","line":1,"column":17,"nodeType":"148","messageId":"149","endLine":1,"endColumn":26},{"ruleId":"146","severity":1,"message":"170","line":4,"column":8,"nodeType":"148","messageId":"149","endLine":4,"endColumn":12},{"ruleId":"146","severity":1,"message":"171","line":5,"column":10,"nodeType":"148","messageId":"149","endLine":5,"endColumn":18},{"ruleId":"146","severity":1,"message":"172","line":9,"column":10,"nodeType":"148","messageId":"149","endLine":9,"endColumn":18},{"ruleId":"146","severity":1,"message":"173","line":9,"column":20,"nodeType":"148","messageId":"149","endLine":9,"endColumn":31},"no-native-reassign",["174"],"no-negated-in-lhs",["175"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","'Link' is defined but never used.","'role' is assigned a value but never used.","'category' is assigned a value but never used.","'loading' is assigned a value but never used.","'getaRedirect' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'preload'. Either include it or remove the dependency array.","ArrayExpression",["176"],"'updateCategory' is defined but never used.","'updateProduct' is defined but never used.","'photo' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'match.params.productId' and 'preload'. Either include them or remove the dependency array.",["177"],"'useEffect' is defined but never used.","'count' is assigned a value but never used.","'setCount' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'Card' is defined but never used.","'loadCart' is defined but never used.","'products' is assigned a value but never used.","'setProducts' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"178","fix":"179"},{"desc":"180","fix":"181"},"Update the dependencies array to be: [preload]",{"range":"182","text":"183"},"Update the dependencies array to be: [match.params.productId, preload]",{"range":"184","text":"185"},[1330,1332],"[preload]",[2129,2131],"[match.params.productId, preload]"]