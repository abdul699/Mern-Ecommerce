[{"C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\index.js":"1","C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\App.js":"2","C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\Routes.js":"3","C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\core\\Home.js":"4","C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\backend.js":"5","C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\core\\Base.js":"6","C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\core\\Menu.js":"7","C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\user\\Signup.js":"8","C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\user\\Signin.js":"9","C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\auth\\helper\\index.js":"10","C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\auth\\helper\\AdminRoutes.js":"11","C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\auth\\helper\\PrivateRoutes.js":"12","C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\user\\UserDashBoard.js":"13","C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\user\\AdminDashBoard.js":"14"},{"size":155,"mtime":1609065758110,"results":"15","hashOfConfig":"16"},{"size":528,"mtime":499162500000,"results":"17","hashOfConfig":"16"},{"size":879,"mtime":1609071877806,"results":"18","hashOfConfig":"16"},{"size":640,"mtime":1609066189432,"results":"19","hashOfConfig":"16"},{"size":50,"mtime":1609065758139,"results":"20","hashOfConfig":"16"},{"size":976,"mtime":1609066677491,"results":"21","hashOfConfig":"16"},{"size":2230,"mtime":1609072338327,"results":"22","hashOfConfig":"16"},{"size":3324,"mtime":1609069820906,"results":"23","hashOfConfig":"16"},{"size":3183,"mtime":1609072214488,"results":"24","hashOfConfig":"16"},{"size":1351,"mtime":1609065758460,"results":"25","hashOfConfig":"16"},{"size":622,"mtime":1609071108914,"results":"26","hashOfConfig":"16"},{"size":590,"mtime":1609071120261,"results":"27","hashOfConfig":"16"},{"size":253,"mtime":1609071390421,"results":"28","hashOfConfig":"16"},{"size":2256,"mtime":1609074600183,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1s3qdtq",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"32"},"C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\index.js",[],["61","62"],"C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\App.js",[],"C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\Routes.js",[],"C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\core\\Home.js",[],"C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\backend.js",[],"C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\core\\Base.js",[],"C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\core\\Menu.js",[],"C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\user\\Signup.js",[],"C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\user\\Signin.js",["63"],"import React, { useState } from \"react\";\nimport Base from \"../core/Base\";\nimport { Link, Redirect } from \"react-router-dom\";\n\nimport { signin, authenticate, isAutheticated } from \"../auth/helper\";\n\nconst Signin = () => {\n  const [values, setValues] = useState({\n    email: \"\",\n    password: \"\",\n    error: \"\",\n    loading: false,\n    didRedirect: false\n  });\n\n  const { email, password, error, loading, didRedirect } = values;\n  const { user } = isAutheticated();\n\n  const handleChange = name => event => {\n    setValues({ ...values, error: false, [name]: event.target.value });\n  };\n\n  const onSubmit = event => {\n    event.preventDefault();\n    setValues({ ...values, error: false, loading: true });\n    signin({ email, password })\n      .then(data => {\n        if (data.error) {\n          setValues({ ...values, error: data.error, loading: false });\n        } else {\n          authenticate(data, () => {\n            setValues({\n              ...values,\n              didRedirect: true\n            });\n          });\n        }\n      })\n      .catch(console.log(\"signin request failed\"));\n  };\n\n  const performRedirect = () => {\n\n    if (didRedirect) {\n      if (user && user.role === 1) {\n        return <Redirect to=\"/admin/dashboard\" />\n      } else {\n        return <Redirect to=\"/user/dashboard\" />\n      }\n    }\n\n    if (isAutheticated()) {\n      return <Redirect to=\"/\" />;\n    }\n  };\n\n  const loadingMessage = () => {\n    return (\n      loading && (\n        <div className=\"alert alert-info\">\n          <h2>Loading...</h2>\n        </div>\n      )\n    );\n  };\n\n  const errorMessage = () => {\n    return (\n      <div className=\"row\">\n        <div className=\"col-md-6 offset-sm-3 text-left\">\n          <div\n            className=\"alert alert-danger\"\n            style={{ display: error ? \"\" : \"none\" }}\n          >\n            {error}\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const signInForm = () => {\n    return (\n      <div className=\"row\">\n        <div className=\"col-md-6 offset-sm-3 text-left\">\n          <form>\n            <div className=\"form-group\">\n              <label className=\"text-light mt-2 mb-2\">Email</label>\n              <input\n                onChange={handleChange(\"email\")}\n                value={email}\n                className=\"form-control\"\n                type=\"email\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label className=\"text-light mt-2 mb-2\">Password</label>\n              <input\n                onChange={handleChange(\"password\")}\n                value={password}\n                className=\"form-control\"\n                type=\"password\"\n              />\n            </div>\n            <button onClick={onSubmit} className=\"btn btn-success btn-block form-control mt-4\">\n                Submit\n              </button>\n          </form>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <Base title=\"Sign In page\" description=\"A page for user to sign in!\">\n      {loadingMessage()}\n      {errorMessage()}\n      {signInForm()}\n      {performRedirect()}\n      <p className=\"text-white text-center\">{JSON.stringify(values)}</p>\n    </Base>\n  );\n};\n\nexport default Signin;\n","C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\auth\\helper\\index.js",[],"C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\auth\\helper\\AdminRoutes.js",[],"C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\auth\\helper\\PrivateRoutes.js",[],"C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\user\\UserDashBoard.js",[],"C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\user\\AdminDashBoard.js",["64"],"import React from 'react'\r\nimport Base from '../core/Base'\r\nimport {isAutheticated} from  \"../auth/helper/index\"\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst AdminDashBoard = () => {\r\n\r\n    const {\r\n    user: {name, email, role}\r\n    } = isAutheticated();\r\n\r\n    const adminLeftSide = () => {\r\n        return (\r\n            <div className=\"card\">\r\n                <h4 className=\"card-header bg-dark text-white\">Admin Navigation</h4>\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">\r\n                        <Link to=\"/admin/create/category\" className=\"nav-link text-success\">Create catergory</Link>\r\n                        <Link to=\"/admin/create/product\" className=\"nav-link text-success\">Create Product</Link>\r\n                        <Link to=\"/admin/orders\" className=\"nav-link text-success\">Manage Order</Link>\r\n                        <Link to=\"/admin/products\" className=\"nav-link text-success\">Manage Product</Link>\r\n                    </li>\r\n\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const adminRightSide = () => {\r\n        return (\r\n            <div className=\"card mb-4\">\r\n                <h4 className=\"card-header bg-dark text-white\">Admin Information</h4>\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">\r\n                        <p className=\"text-success\"><span className=\"badge\">Name:</span> {name}</p>\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        <p className=\"text-success\"><span className=\"badge\">Email:</span> {email}</p>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        )}\r\n    \r\n    return (\r\n        <Base \r\n            title=\"Welcome to admin area\" \r\n            description=\"Manage all of your project here\"\r\n            className=\"container bg-success p-4\"\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">\r\n                    {adminLeftSide()}\r\n                </div>\r\n                <div className=\"col-9\">\r\n                    {adminRightSide()}\r\n                </div>\r\n            </div>\r\n            \r\n        </Base>\r\n    )}\r\n\r\nexport default AdminDashBoard",{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":3,"column":10,"nodeType":"71","messageId":"72","endLine":3,"endColumn":14},{"ruleId":"69","severity":1,"message":"73","line":9,"column":25,"nodeType":"71","messageId":"72","endLine":9,"endColumn":29},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'role' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]