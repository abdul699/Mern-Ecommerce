[{"C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\index.js":"1","C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\Routes.js":"2","C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\core\\Cart.js":"3","C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\core\\Contact.js":"4","C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\core\\Home.js":"5","C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\user\\Signup.js":"6","C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\user\\Signin.js":"7","C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\user\\UserDashBoard.js":"8","C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\user\\AdminDashBoard.js":"9","C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\admin\\ManageProducts.js":"10","C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\admin\\AddProduct.js":"11","C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\admin\\ManageCategories.js":"12","C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\admin\\UpdateProduct.js":"13","C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\admin\\AddCategory.js":"14","C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\auth\\helper\\AdminRoutes.js":"15","C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\auth\\helper\\PrivateRoutes.js":"16","C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\core\\Card.js":"17","C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\core\\Base.js":"18","C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\auth\\helper\\index.js":"19","C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\core\\helper\\coreapicalls.js":"20","C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\core\\helper\\cartHelper.js":"21","C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\admin\\helper\\adminapicall.js":"22","C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\backend.js":"23","C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\core\\helper\\orderHelper.js":"24","C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\core\\helper\\ImageHelper.js":"25","C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\core\\Menu.js":"26","C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\core\\PaymentsB.js":"27","C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\core\\helper\\paymentBhelper.js":"28"},{"size":155,"mtime":1609065758110,"results":"29","hashOfConfig":"30"},{"size":1722,"mtime":1610108031083,"results":"31","hashOfConfig":"30"},{"size":1347,"mtime":1618495739404,"results":"32","hashOfConfig":"30"},{"size":342,"mtime":1618490350845,"results":"33","hashOfConfig":"30"},{"size":1039,"mtime":1618491598067,"results":"34","hashOfConfig":"30"},{"size":3172,"mtime":1618494969003,"results":"35","hashOfConfig":"30"},{"size":3041,"mtime":1618495010291,"results":"36","hashOfConfig":"30"},{"size":253,"mtime":1609071390421,"results":"37","hashOfConfig":"30"},{"size":2975,"mtime":1618495333333,"results":"38","hashOfConfig":"30"},{"size":2734,"mtime":1609677822936,"results":"39","hashOfConfig":"30"},{"size":5903,"mtime":1618493189304,"results":"40","hashOfConfig":"30"},{"size":2381,"mtime":1610097711438,"results":"41","hashOfConfig":"30"},{"size":6762,"mtime":1610090615874,"results":"42","hashOfConfig":"30"},{"size":2668,"mtime":1609663548126,"results":"43","hashOfConfig":"30"},{"size":622,"mtime":1609071108914,"results":"44","hashOfConfig":"30"},{"size":590,"mtime":1609071120261,"results":"45","hashOfConfig":"30"},{"size":2572,"mtime":1618492078428,"results":"46","hashOfConfig":"30"},{"size":1153,"mtime":1618485243270,"results":"47","hashOfConfig":"30"},{"size":1351,"mtime":1609065758460,"results":"48","hashOfConfig":"30"},{"size":234,"mtime":1618490572860,"results":"49","hashOfConfig":"30"},{"size":1283,"mtime":1617616362312,"results":"50","hashOfConfig":"30"},{"size":3210,"mtime":1618493074092,"results":"51","hashOfConfig":"30"},{"size":49,"mtime":1618490335877,"results":"52","hashOfConfig":"30"},{"size":509,"mtime":1617615638279,"results":"53","hashOfConfig":"30"},{"size":662,"mtime":1610105004122,"results":"54","hashOfConfig":"30"},{"size":2230,"mtime":1618494717190,"results":"55","hashOfConfig":"30"},{"size":3771,"mtime":1618490512674,"results":"56","hashOfConfig":"30"},{"size":914,"mtime":1618483454924,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1s3qdtq",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"60"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"60"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"60"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"60"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"60"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"60"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"60"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"60"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},"C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\index.js",[],["127","128"],"C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\Routes.js",[],"C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\core\\Cart.js",[],"C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\core\\Contact.js",[],"C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\core\\Home.js",["129"],"import React, { useEffect, useState } from \"react\";\nimport \"../styles.css\";\nimport Base from \"./Base\";\nimport Card from \"./Card\";\nimport { getProducts } from \"./helper/coreapicalls\";\n\nexport default function Home() {\n  const [products, setProducts] = useState([])\n  const [error, setError] = useState(false)\n\n  const loadAllProducts = () => {\n    getProducts()\n    .then(data => {\n      if(data.error) {\n        setError(data.error)\n      }\n      else {\n        setProducts(data)\n      }\n    })\n  }\n\n  useEffect(() => {\n    loadAllProducts()\n  }, [])\n\n  return (\n    <Base title=\"T-Shirts\" description=\"Think of something you love. Think of it on a t-shirt.\">\n      <div className=\"row text-center\">\n        <h1 className=\"text-white\">Shop Now</h1>\n        <div className=\"row\">\n          {products.map((product, index) => {\n            return(\n              <div key={index} className=\"col-4 mb-4\">\n                <Card product={product}/>\n              </div>\n            )\n          })}\n        </div>\n\n      </div>\n    </Base>\n  );\n}\n","C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\user\\Signup.js",[],"C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\user\\Signin.js",["130"],"import React, { useState } from \"react\";\nimport Base from \"../core/Base\";\nimport { Link, Redirect } from \"react-router-dom\";\n\nimport { signin, authenticate, isAutheticated } from \"../auth/helper\";\n\nconst Signin = () => {\n  const [values, setValues] = useState({\n    email: \"\",\n    password: \"\",\n    error: \"\",\n    loading: false,\n    didRedirect: false\n  });\n\n  const { email, password, error, loading, didRedirect } = values;\n  const { user } = isAutheticated();\n\n  const handleChange = name => event => {\n    setValues({ ...values, error: false, [name]: event.target.value });\n  };\n\n  const onSubmit = event => {\n    event.preventDefault();\n    setValues({ ...values, error: false, loading: true });\n    signin({ email, password })\n      .then(data => {\n        if (data.error) {\n          setValues({ ...values, error: data.error, loading: false });\n        } else {\n          authenticate(data, () => {\n            setValues({\n              ...values,\n              didRedirect: true\n            });\n          });\n        }\n      })\n      .catch(console.log(\"signin request failed\"));\n  };\n\n  const performRedirect = () => {\n\n    if (didRedirect) {\n      if (user && user.role === 1) {\n        return <Redirect to=\"/admin/dashboard\" />\n      } else {\n        return <Redirect to=\"/user/dashboard\" />\n      }\n    }\n\n    if (isAutheticated()) {\n      return <Redirect to=\"/\" />;\n    }\n  };\n\n  const loadingMessage = () => {\n    return (\n      loading && (\n        <div className=\"alert alert-info\">\n          <h2>Loading...</h2>\n        </div>\n      )\n    );\n  };\n\n  const errorMessage = () => {\n    return (\n      <div className=\"row\">\n        <div className=\"col-md-6 offset-sm-3 text-left\">\n          <div\n            className=\"alert alert-danger\"\n            style={{ display: error ? \"\" : \"none\" }}\n          >\n            {error}\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const signInForm = () => {\n    return (\n      <div className=\"row\">\n        <div className=\"col-md-6 offset-sm-3 text-left\">\n          <form>\n            <div className=\"form-group mt-3 mb-3\">\n              <input\n                onChange={handleChange(\"email\")}\n                value={email}\n                className=\"form-control\"\n                type=\"email\"\n                placeholder=\"Email\"\n              />\n            </div>\n\n            <div className=\"form-group mt-3 mb-3\">\n              <input\n                onChange={handleChange(\"password\")}\n                value={password}\n                className=\"form-control\"\n                type=\"password\"\n                placeholder=\"Password\"\n              />\n            </div>\n            <button onClick={onSubmit} className=\"btn rounded btn-success btn-block form-control mt-4\">\n                Submit\n              </button>\n          </form>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <Base title=\"Log In\" description=\"\">\n      {loadingMessage()}\n      {errorMessage()}\n      {signInForm()}\n      {performRedirect()}\n    </Base>\n  );\n};\n\nexport default Signin;\n","C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\user\\UserDashBoard.js",[],"C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\user\\AdminDashBoard.js",["131"],"import React from 'react'\r\nimport Base from '../core/Base'\r\nimport {isAutheticated} from  \"../auth/helper/index\"\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst AdminDashBoard = () => {\r\n\r\n    const {\r\n    user: {name, email, role}\r\n    } = isAutheticated();\r\n\r\n    const adminLeftSide = () => {\r\n        return (\r\n            <div className=\"card border-primary\">\r\n                <h4 className=\"card-header bg-dark text-white\">Navigations</h4>\r\n                <ul className=\"list-group list-group-flush\">\r\n                    <li className=\"list-group-item list-group-item-action\">\r\n                        <Link to=\"/admin/create/category\" className=\"nav-link text-success font-weight-bold\">Create Catergory</Link>\r\n                    </li>\r\n                    <li className=\"list-group-item list-group-item-action\">\r\n                        <Link to=\"/admin/categories\" className=\"nav-link text-success\">Manage Categories</Link>\r\n                    </li>\r\n                    <li className=\"list-group-item list-group-item-action\">\r\n                        <Link to=\"/admin/create/product\" className=\"nav-link text-success\">Create Product</Link>\r\n                    </li>\r\n                    <li className=\"list-group-item list-group-item-action\">\r\n                        <Link to=\"/admin/products\" className=\"nav-link text-success\">Manage Products</Link>\r\n                    </li>\r\n                    <li className=\"list-group-item list-group-item-action\">\r\n                        <Link to=\"/admin/orders\" className=\"nav-link text-success\">Manage Order</Link>\r\n                    </li> \r\n                    \r\n\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const adminRightSide = () => {\r\n        return (\r\n            <div className=\"card mb-4 border-primary\">\r\n                <h4 className=\"card-header bg-dark text-white\">My Information</h4>\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item list-group-item-action\">\r\n                        <p className=\"text-success\"><span className=\"badge bg-warning text-dark\">Name: </span> {name}</p>\r\n                    </li>\r\n                    <li className=\"list-group-item list-group-item-action\">\r\n                        <p className=\"text-success\"><span className=\"badge bg-warning text-dark\">Email:</span> {email}</p>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        )}\r\n    \r\n    return (\r\n        <Base \r\n            title=\"Welcome\"\r\n            description=\"You can manage all products, categories and orders here\"\r\n            className=\"container p-4\"\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">\r\n                    {adminLeftSide()}\r\n                </div>\r\n                <div className=\"col-9\">\r\n                    {adminRightSide()}\r\n                </div>\r\n            </div>\r\n            \r\n        </Base>\r\n    )}\r\n\r\nexport default AdminDashBoard","C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\admin\\ManageProducts.js",["132"],"import React, {useState, useEffect} from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { isAutheticated } from '../auth/helper';\r\nimport Base from '../core/Base';\r\nimport { deleteProduct, getAllProducts, updateProduct } from './helper/adminapicall';\r\n\r\nconst ManageProducts = () => {\r\n    const [products, setProducts] = useState([])\r\n\r\n    const {user, token} = isAutheticated();\r\n\r\n    const preload = () => {\r\n        getAllProducts()\r\n        .then(data => {\r\n            if(data.error) {\r\n                console.log(data.error)\r\n            }\r\n            else {\r\n                setProducts(data);\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        preload();\r\n    }, []);\r\n\r\n    const deleteThisProduct = productId => {\r\n        deleteProduct(productId, user._id, token)\r\n        .then(data => {\r\n            if(data.error) {\r\n                console.log(data.error)\r\n            }\r\n            else {\r\n                preload();\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Base title=\"Welcome admin\" description=\"Manage products here\">\r\n            <h2 className=\"mb-4\">All products:</h2>\r\n            <Link className=\"btn btn-info\" to={`/admin/dashboard`}>\r\n                <span className=\"\">Admin Home</span>\r\n            </Link>\r\n            <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                <h2 className=\"text-center text-white my-3\">Total {products.length} products</h2>\r\n                {products.map((product, index) => {\r\n                    return (\r\n                        <div key={index} className=\"row text-center mb-2 \">\r\n                            <div className=\"col-4\">\r\n                                <h3 className=\"text-white text-left\">{product.name}</h3>\r\n                            </div>\r\n                            <div className=\"col-4\">\r\n                                <Link\r\n                                className=\"btn btn-success\"\r\n                                to={`/admin/product/update/${product._id}`}\r\n                                >\r\n                                <span className=\"\">Update</span>\r\n                                </Link>\r\n                            </div>\r\n                            <div className=\"col-4\">\r\n                                <button onClick={() => {\r\n                                    deleteThisProduct(product._id)\r\n                                }} className=\"btn btn-danger\">\r\n                                Delete\r\n                                </button>\r\n                            </div>\r\n                        </div>);\r\n                })}\r\n                </div>\r\n            </div>\r\n        </Base>\r\n    )\r\n}\r\n\r\nexport default ManageProducts;","C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\admin\\AddProduct.js",["133","134","135","136"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { isAutheticated } from '../auth/helper/index';\r\nimport Base from '../core/Base'\r\nimport { createaProduct, getAllCategories } from './helper/adminapicall';\r\n\r\n\r\nconst AddProduct = () => {\r\n\r\n    const {user, token} = isAutheticated();\r\n\r\n    const [values, setValues] = useState({\r\n        name: \"\",\r\n        description: \"\",\r\n        price: \"\",\r\n        stock: \"\",\r\n        photo: \"\",\r\n        categories: [],\r\n        category: \"\",\r\n        loading: false,\r\n        error: \"\",\r\n        createdProduct: \"\",\r\n        getaRedirect: false,\r\n        formData: \"\"\r\n    });\r\n\r\n    const { \r\n        name, \r\n        description, \r\n        price, \r\n        stock,\r\n        categories, \r\n        category, \r\n        loading, \r\n        error, \r\n        createdProduct, \r\n        getaRedirect, \r\n        formData\r\n    } = values;\r\n\r\n    const preload = () => {\r\n        getAllCategories().then(data => {\r\n            // console.log(data)\r\n            if(data.error) {\r\n                setValues({ ...values, error: data.error});\r\n            }\r\n            else {\r\n                setValues({ ...values, categories: data, formData: new FormData() });\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n          preload();\r\n    }, []);\r\n\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n        setValues({...values, error: \"\", loading: true});\r\n        createaProduct(user._id, token, formData)\r\n        .then(data => {\r\n            if(data.error) {\r\n                setValues({...values, error: data.error});\r\n            }\r\n            else {\r\n                setValues({\r\n                    ...values, \r\n                    name: \"\",\r\n                    description: \"\",\r\n                    price: \"\",\r\n                    photo: \"\",\r\n                    stock: \"\",\r\n                    loading: false,\r\n                    createdProduct: data.name\r\n                })\r\n            }\r\n        })\r\n        .catch(err => console.log(\"ERR: \", err))\r\n    }\r\n\r\n    const handleChange = name => event => {\r\n        const value = name === \"photo\" ? event.target.files[0] : event.target.value;\r\n        formData.set(name, value);\r\n        setValues({...values, [name]: value});\r\n    }\r\n\r\n    const successMessage = () => (\r\n        <div className=\"alert alert-success mt-3\"\r\n        style={{display : createdProduct ? \"\" : \"none\" }}>\r\n            <h4>{createdProduct} created successfully</h4>\r\n        </div>\r\n    )\r\n\r\n    const warningMessage = () => (\r\n        <div className=\"alert alert-danger mt-3\"\r\n        style={{display : error ? \"\" : \"none\" }}>\r\n            <h4>{error}</h4>\r\n        </div>\r\n    )\r\n\r\n    const createProductForm = () => (\r\n        <form >\r\n          <div className=\"form-group mt-2 mb-2\">\r\n            <label className=\"btn btn-block form-control btn-success\">\r\n                <span >Post photo: </span>\r\n              <input\r\n                onChange={handleChange(\"photo\")}\r\n                type=\"file\"\r\n                name=\"photo\"\r\n                accept=\"image\"\r\n                placeholder=\"choose a file\"\r\n              />\r\n            </label>\r\n          </div>\r\n          <div className=\"form-group mt-2 mb-2\">\r\n            <input\r\n              onChange={handleChange(\"name\")}\r\n              name=\"photo\"\r\n              className=\"form-control\"\r\n              placeholder=\"Name\"\r\n              value={name}\r\n            />\r\n          </div>\r\n          <div className=\"form-group mt-2 mb-2\">\r\n            <textarea\r\n              onChange={handleChange(\"description\")}\r\n              name=\"photo\"\r\n              className=\"form-control\"\r\n              placeholder=\"Description\"\r\n              value={description}\r\n            />\r\n          </div>\r\n          <div className=\"form-group mt-2 mb-2\">\r\n            <input\r\n              onChange={handleChange(\"price\")}\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              placeholder=\"Price\"\r\n              value={price}\r\n            />\r\n          </div>\r\n          <div className=\"form-group mt-2 mb-2\">\r\n            <select\r\n              onChange={handleChange(\"category\")}\r\n              className=\"form-control\"\r\n              placeholder=\"Category\"\r\n            >\r\n              <option>Select</option>\r\n              {categories && \r\n              categories.map((category, index) => (\r\n                  <option className=\"bg-dark text-white\" key={index} value={category._id}>{category.name}</option>\r\n              ))\r\n              }\r\n            </select>\r\n          </div>\r\n          <div className=\"form-group mt-2 mb-2\">\r\n            <input\r\n              onChange={handleChange(\"stock\")}\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              placeholder=\"Quantity\"\r\n              value={stock}\r\n            />\r\n          </div>\r\n          <button type=\"submit\" onClick={onSubmit} className=\"btn form-control btn-block btn-outline-success mt-2 mb-2\">\r\n            Create Product\r\n          </button>\r\n        </form>\r\n      );\r\n\r\n\r\n\r\n    const goBack = () => (\r\n        <div className=\"mt-5\">\r\n            <Link className=\"btn btn-sm btn-dark mb-3\" to=\"/admin/dashboard\">Admin Home</Link>\r\n        </div>\r\n    )\r\n\r\n    return (\r\n        <div>\r\n            <Base\r\n            title=\"Add a product here!\"\r\n            description=\"Add new Tshirt\"\r\n            className=\"container bg-info p-4\"\r\n            >\r\n                {goBack()}\r\n                <div className=\"row bg-dark text-white rounded\">\r\n                    <div className=\"col-md-8 offset-md-2\">\r\n                        {successMessage()}\r\n                        {warningMessage()}\r\n                        {createProductForm()}\r\n                    </div>\r\n                </div>\r\n            </Base>\r\n        </div>\r\n    )\r\n}\r\nexport default AddProduct; \r\n","C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\admin\\ManageCategories.js",["137"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { isAutheticated } from '../auth/helper'\r\nimport Base from '../core/Base'\r\nimport { deleteCategory, getAllCategories, updateCategory } from './helper/adminapicall'\r\n\r\n const ManageCategories = () => {\r\n\r\n    const [categories, setCategories] = useState([])\r\n\r\n    const {user, token} = isAutheticated();\r\n\r\n    const preload = () => {\r\n        getAllCategories()\r\n        .then(data => {\r\n            if(data.error) {\r\n                console.log(data.error)\r\n            }\r\n            else {\r\n                setCategories(data);\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        preload();\r\n    }, []);\r\n\r\n\r\n    const deleteThisCategory = categoryId => {\r\n        deleteCategory(categoryId, user._id, token)\r\n        .then(data => {\r\n            if(data.error) {\r\n                console.log(data.error)\r\n            }\r\n            else {\r\n                preload();\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Base title=\"Welcome admin\" description=\"Manage products here\">\r\n            <Link className=\"btn btn-info mb-2\" to={`/admin/dashboard`}>\r\n                <span className=\"\">Admin Home</span>\r\n            </Link>\r\n            <h2 className=\"mb-4\">All Categories:</h2>\r\n            <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                <h2 className=\"text-center text-white my-3\">Total {categories.length} Categories</h2>\r\n                {categories.map((category, index) => {\r\n                    return(\r\n                        <div key={index} className=\"row text-center mb-2 \">\r\n                            <div className=\"col-6\">\r\n                                <h3 className=\"text-white text-left\">{category.name}</h3>\r\n                            </div>\r\n                            <div className=\"col-6\">\r\n                                <button onClick={() => {\r\n                                    deleteThisCategory(category._id)\r\n                                }} className=\"btn btn-lg btn-outline-danger\">\r\n                                Delete\r\n                                </button>\r\n                            </div>\r\n                        </div>);\r\n                })}\r\n                </div>\r\n            </div>\r\n        </Base>\r\n\r\n    )\r\n}\r\nexport default ManageCategories\r\n","C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\admin\\UpdateProduct.js",["138","139","140","141","142"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { isAutheticated } from '../auth/helper/index';\r\nimport Base from '../core/Base'\r\nimport { getaProduct, getAllCategories, updateProduct } from './helper/adminapicall';\r\n\r\n\r\nconst UpdateProduct = ({match}) => {\r\n\r\n    const {user, token} = isAutheticated();\r\n\r\n    const [values, setValues] = useState({\r\n        name: \"\",\r\n        description: \"\",\r\n        price: \"\",\r\n        stock: \"\",\r\n        photo: \"\",\r\n        categories: [],\r\n        category: \"\",\r\n        loading: false,\r\n        error: \"\",\r\n        createdProduct: \"\",\r\n        getaRedirect: false,\r\n        formData: \"\"\r\n    });\r\n\r\n    const { \r\n        name, \r\n        description, \r\n        price, \r\n        photo,\r\n        stock,\r\n        categories, \r\n        category, \r\n        loading, \r\n        error, \r\n        createdProduct, \r\n        getaRedirect, \r\n        formData\r\n    } = values;\r\n\r\n    const preload = (productId) => {\r\n        getaProduct(productId).then(data => {\r\n            // console.log(data)\r\n            preloadCategories();\r\n            if(data.error) {\r\n                setValues({ ...values, error: data.error});\r\n            }\r\n            else {\r\n                setValues({ \r\n                    ...values,\r\n                    name: data.name,\r\n                    description: data.description,\r\n                    photo: data.photo,\r\n                    price: data.price,\r\n                    category: data.category._id,\r\n                    stock: data.stock,\r\n                    formData: new FormData(),\r\n                });\r\n            }\r\n        })\r\n    }\r\n\r\n    const preloadCategories = () => {\r\n        getAllCategories()\r\n        .then(data => {\r\n            if(data.error) {\r\n                setValues({ ...values, error: data.error});\r\n            }\r\n            else {\r\n                setValues({ \r\n                    categories: data,\r\n                    formData: new FormData()\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n          preload(match.params.productId);\r\n    }, []);\r\n\r\n    // TODO: need to work on it\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n        setValues({...values, error: \"\", loading: true});\r\n\r\n        updateProduct(match.params.productId, user._id, token, formData)\r\n        .then(data => {\r\n            if(data.error) {\r\n                setValues({...values, error: data.error});\r\n            }\r\n            else {\r\n                setValues({\r\n                    ...values, \r\n                    name: \"\",\r\n                    description: \"\",\r\n                    price: \"\",\r\n                    photo: \"\",\r\n                    stock: \"\",\r\n                    loading: false,\r\n                    createdProduct: data.name\r\n                })\r\n            }\r\n        })\r\n        .catch(err => console.log(\"ERR: \", err))\r\n    }\r\n\r\n    const handleChange = name => event => {\r\n        const value = name === \"photo\" ? event.target.files[0] : event.target.value;\r\n        formData.set(name, value);\r\n        setValues({...values, [name]: value});\r\n    }\r\n\r\n    const successMessage = () => (\r\n        <div className=\"alert alert-success mt-3\"\r\n        style={{display : createdProduct ? \"\" : \"none\" }}>\r\n            <h4>{createdProduct} Update successfully</h4>\r\n        </div>\r\n    )\r\n\r\n    const warningMessage = () => (\r\n        <div className=\"alert alert-danger mt-3\"\r\n        style={{display : error ? \"\" : \"none\" }}>\r\n            <h4>{error}</h4>\r\n        </div>\r\n    )\r\n\r\n    const createProductForm = () => (\r\n        <form >\r\n          <div className=\"form-group mt-2 mb-2\">\r\n            <label className=\"btn btn-block form-control btn-success\">\r\n                <span >Post photo: </span>\r\n              <input\r\n                onChange={handleChange(\"photo\")}\r\n                type=\"file\"\r\n                name=\"photo\"\r\n                accept=\"image\"\r\n                placeholder=\"choose a file\"\r\n              />\r\n            </label>\r\n          </div>\r\n          <div className=\"form-group mt-2 mb-2\">\r\n            <input\r\n              onChange={handleChange(\"name\")}\r\n              name=\"photo\"\r\n              className=\"form-control\"\r\n              placeholder=\"Name\"\r\n              value={name}\r\n            />\r\n          </div>\r\n          <div className=\"form-group mt-2 mb-2\">\r\n            <textarea\r\n              onChange={handleChange(\"description\")}\r\n              name=\"photo\"\r\n              className=\"form-control\"\r\n              placeholder=\"Description\"\r\n              value={description}\r\n            />\r\n          </div>\r\n          <div className=\"form-group mt-2 mb-2\">\r\n            <input\r\n              onChange={handleChange(\"price\")}\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              placeholder=\"Price\"\r\n              value={price}\r\n            />\r\n          </div>\r\n          <div className=\"form-group mt-2 mb-2\">\r\n            <select\r\n              onChange={handleChange(\"category\")}\r\n              className=\"form-control\"\r\n              placeholder=\"Category\"\r\n            >\r\n              <option>Select</option>\r\n              {categories && \r\n              categories.map((category, index) => (\r\n                  <option className=\"bg-dark text-white\" key={index} value={category._id}>{category.name}</option>\r\n              ))\r\n              }\r\n            </select>\r\n          </div>\r\n          <div className=\"form-group mt-2 mb-2\">\r\n            <input\r\n              onChange={handleChange(\"stock\")}\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              placeholder=\"Quantity\"\r\n              value={stock}\r\n            />\r\n          </div>\r\n          <button type=\"submit\" onClick={onSubmit} className=\"btn form-control btn-block btn-outline-success mb-2 mt-2\">\r\n            Update Product\r\n          </button>\r\n        </form>\r\n      );\r\n\r\n\r\n\r\n    const goBack = () => (\r\n        <div className=\"mt-5\">\r\n            <Link className=\"btn btn-sm btn-dark mb-3\" to=\"/admin/dashboard\">Admin Home</Link>\r\n        </div>\r\n    )\r\n\r\n    return (\r\n        <div>\r\n            <Base\r\n            title=\"Add a product here!\"\r\n            description=\"Add new Tshirt\"\r\n            className=\"container bg-info p-4\"\r\n            >\r\n                {goBack()}\r\n                <div className=\"row bg-dark text-white rounded\">\r\n                    <div className=\"col-md-8 offset-md-2\">\r\n                        {successMessage()}\r\n                        {warningMessage()}\r\n                        {createProductForm()}\r\n                    </div>\r\n                </div>\r\n            </Base>\r\n        </div>\r\n    )\r\n}\r\nexport default UpdateProduct; \r\n","C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\admin\\AddCategory.js",[],"C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\auth\\helper\\AdminRoutes.js",[],"C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\auth\\helper\\PrivateRoutes.js",[],"C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\core\\Card.js",["143","144","145"],"import React, { useState, useEffect } from 'react'\r\nimport { Redirect } from 'react-router-dom';\r\nimport ImageHelper from './helper/ImageHelper'\r\nimport { addItemToCart, removeItemFromCart } from './helper/cartHelper'\r\n\r\nconst Card = ({\r\n    product,\r\n    addtoCart = true,\r\n    removeFromCart = false,\r\n    setReload = f => f,\r\n    reload = undefined\r\n}) => {\r\n\r\n    const [redirect, setRedirect] = useState(false);\r\n    const [count, setCount] = useState(product.count);\r\n\r\n    const cartTitle = product ? product.name : \"Coding Tshirt\";\r\n    const cartDescription = product ? product.description : \"Default Tshirt Description\";\r\n    const cartPrice = product ? product.price : \"10\";\r\n\r\n    const addToCart = () => {\r\n        addItemToCart(product, () => setRedirect(true));\r\n    }\r\n\r\n    const getARedirect = redirect => {\r\n        if(redirect) {\r\n            return <Redirect to=\"/cart\" />\r\n        }\r\n    }\r\n    \r\n    const showAddToCart = () => {\r\n        return (\r\n            addtoCart && (\r\n                <div className=\"col-12\">\r\n                    <button\r\n                        onClick = {addToCart}\r\n                        className=\"rounded btn form-control btn-block btn-outline-success mt-2 mb-2\">\r\n                        Add to Cart\r\n                    </button>\r\n                </div>\r\n            )\r\n        )\r\n    }\r\n\r\n    const showRemoveFromCart = () => {\r\n        return (removeFromCart && (\r\n            <div className=\"col-12\">\r\n                <button\r\n                    onClick = { () => {\r\n                        removeItemFromCart(product._id);\r\n                        setReload(!reload)\r\n                    }}\r\n                    className=\"btn rounded form-control btn-block btn-outline-danger mt-2 mb-2\">\r\n                    Remove from Cart\r\n                </button>\r\n            </div>\r\n        ))\r\n    }\r\n\r\n    return (\r\n        <div className=\"card text-white bg-dark border border-info\" >\r\n            <div className=\"card-header lead\">{cartTitle}</div>\r\n            <div className=\"card-body\">\r\n                {getARedirect(redirect)}\r\n                <ImageHelper product={product} />\r\n                <p className=\"lead bg-info font-weight-normal text-wrap mt-2 rounded\">{cartDescription}</p>\r\n                <p className=\"btn btn-success rounded px-4\">Price: {cartPrice}</p>\r\n                <div className=\"row\">\r\n                    {showAddToCart(addtoCart)}\r\n                    {showRemoveFromCart(removeFromCart)}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Card\r\n","C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\core\\Base.js",[],"C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\auth\\helper\\index.js",[],"C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\core\\helper\\coreapicalls.js",[],"C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\core\\helper\\cartHelper.js",["146"],"export const addItemToCart = (item, next) => {\r\n    let cart = []\r\n    if(typeof window !== undefined) {\r\n        if(localStorage.getItem(\"cart\")) {\r\n            cart = JSON.parse(localStorage.getItem(\"cart\"))\r\n        }\r\n        cart.push({\r\n            ...item,\r\n            count: 1\r\n        })\r\n        localStorage.setItem(\"cart\", JSON.stringify(cart))\r\n        next();\r\n    }\r\n}\r\n\r\nexport const loadCart = () => {\r\n    if(typeof window !== undefined) {\r\n        if(localStorage.getItem(\"cart\")) {\r\n            return JSON.parse(localStorage.getItem(\"cart\"))\r\n        }\r\n    }\r\n}\r\n\r\nexport const removeItemFromCart = (productId) => {\r\n    let cart = []\r\n    if(typeof window !== undefined) {\r\n        if(localStorage.getItem(\"cart\")) {\r\n            cart = JSON.parse(localStorage.getItem(\"cart\"))\r\n        }\r\n        cart.map((product, index) => {\r\n            if(product._id === productId) {\r\n                cart.splice(index, 1)\r\n            }\r\n        })\r\n        localStorage.setItem(\"cart\", JSON.stringify(cart))\r\n    }\r\n    return cart;\r\n}\r\n\r\nexport const emptyCart = next => {\r\n    if(typeof window !== undefined) {\r\n        localStorage.removeItem(\"cart\");\r\n        let cart = [];\r\n        localStorage.setItem(\"cart\", JSON.stringify(cart))\r\n        next();\r\n    }\r\n}\r\n","C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\admin\\helper\\adminapicall.js",[],"C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\backend.js",[],"C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\core\\helper\\orderHelper.js",[],"C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\core\\helper\\ImageHelper.js",["147"],"import React from 'react'\r\nimport { API } from '../../backend';\r\n\r\nconst ImageHelper = ({product}) => {\r\n    const imageUrl = product \r\n    ? `${API}product/photo/${product._id}`\r\n    : `https://media.gettyimages.com/photos/indian-bollywood-actors-kriti-sanon-and-varun-dhawan-make-an-during-picture-id497794866?s=2048x2048`;\r\n    return (\r\n        <div className=\"rounded border border-success p-2\">\r\n            <img\r\n                src = {imageUrl}\r\n                alt=\"Photo\"\r\n                style={{ maxHeight: \"100%\", maxWidth: \"100% \"}}\r\n                className=\"mb-3 rounded\" \r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageHelper;","C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\core\\Menu.js",[],"C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\core\\PaymentsB.js",["148","149","150","151"],"import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { isAutheticated } from '../auth/helper';\r\nimport { emptyCart, loadCart } from './helper/cartHelper';\r\nimport { createOrder } from './helper/orderHelper';\r\nimport { getToken, processPayment } from './helper/paymentBhelper';\r\nimport DropIn from \"braintree-web-drop-in-react\";\r\n\r\nconst PaymentsB = ({ products, setReload = f => f, reload = undefined }) => {\r\n\r\n    const [info, setInfo] = useState({\r\n        loading: false,\r\n        success: false,\r\n        clientToken: null,\r\n        error: \"\",\r\n        instance: {}\r\n    });\r\n\r\n    const userId = isAutheticated() && isAutheticated().user._id;\r\n    const token = isAutheticated() && isAutheticated().token;\r\n\r\n    const getMeToken = (userId, token) => {\r\n        getToken(userId, token).then(info => {\r\n            console.log(\"INFORMATION: \", info)\r\n            if(info.error) {\r\n                // console.log(\"ERRORS: \", info.error)\r\n                setInfo({...info, error: info.error});\r\n            }\r\n            else {\r\n                const clientToken = info.clientToken;\r\n                setInfo({ clientToken })\r\n            }\r\n        })\r\n    }\r\n\r\n    const showdropIn = () => {\r\n        // console.log(typeof amount)\r\n        return (\r\n            <div>\r\n                {(info.clientToken !== null && products.length > 0 && userId !== false) ? (\r\n                    <div>\r\n                        <DropIn\r\n                        options={{ authorization: info.clientToken }}\r\n                        onInstance={(instance) => (info.instance = instance)}\r\n                        />\r\n                        <button className=\"btn btn-block form-control btn-outline-success\" onClick={onBuy}>Buy</button>\r\n                    </div>\r\n                ) : ( (userId === false) ? (<h3>You are not logged In, Please Login <Link to=\"/signin\">here</Link></h3>) : (<></>))}\r\n            </div>\r\n        )\r\n    }    \r\n    useEffect(() => {\r\n        getMeToken(userId, token)\r\n    }, []);\r\n\r\n    const onBuy = () => {\r\n        setInfo({loading: true})\r\n        let nonce;\r\n        let getNonce = info.instance\r\n            .requestPaymentMethod()\r\n            .then(data => {\r\n                nonce = data.nonce\r\n                const paymentData = {\r\n                    requestPaymentMethodNonce: nonce,\r\n                    amount: getAmount()\r\n                }\r\n                processPayment(userId, token, paymentData)\r\n                .then(response => {\r\n                    setInfo({ ...info, success: response.success, loading: false });\r\n                    console.log(\"PAYMENT SUCCESS\");\r\n                    console.log(\"ABDUL PRINTING RESPONSE\", response);\r\n                    const orderData = {\r\n                        products: products,\r\n                        // transaction_id : response.transaction._id,\r\n                        amount: response.params.transaction.amount\r\n                    }\r\n                    createOrder(userId, token, orderData);\r\n                    emptyCart(() => {\r\n                    })\r\n                    setReload(!reload);\r\n                }).catch(err => {\r\n                    console.log(err);\r\n                })\r\n            })\r\n            .catch(error => {\r\n                setInfo({loading: false, success: false});\r\n                console.log(\"PAYMENT FAILED\");\r\n            })\r\n    }\r\n\r\n    const getAmount = () => {\r\n        let amount = 0;\r\n        products.map(product => {\r\n            amount = amount + product.price;\r\n        })\r\n        return amount;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3>Your Bill is <br></br> {getAmount()}$</h3>\r\n            {showdropIn()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PaymentsB;","C:\\Users\\kabdu\\Desktop\\Mern-Ecommerce\\projfrontend\\src\\core\\helper\\paymentBhelper.js",[],["152","153"],{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","severity":1,"message":"159","line":9,"column":10,"nodeType":"160","messageId":"161","endLine":9,"endColumn":15},{"ruleId":"158","severity":1,"message":"162","line":3,"column":10,"nodeType":"160","messageId":"161","endLine":3,"endColumn":14},{"ruleId":"158","severity":1,"message":"163","line":9,"column":25,"nodeType":"160","messageId":"161","endLine":9,"endColumn":29},{"ruleId":"158","severity":1,"message":"164","line":5,"column":41,"nodeType":"160","messageId":"161","endLine":5,"endColumn":54},{"ruleId":"158","severity":1,"message":"165","line":33,"column":9,"nodeType":"160","messageId":"161","endLine":33,"endColumn":17},{"ruleId":"158","severity":1,"message":"166","line":34,"column":9,"nodeType":"160","messageId":"161","endLine":34,"endColumn":16},{"ruleId":"158","severity":1,"message":"167","line":37,"column":9,"nodeType":"160","messageId":"161","endLine":37,"endColumn":21},{"ruleId":"168","severity":1,"message":"169","line":55,"column":8,"nodeType":"170","endLine":55,"endColumn":10,"suggestions":"171"},{"ruleId":"158","severity":1,"message":"172","line":5,"column":44,"nodeType":"160","messageId":"161","endLine":5,"endColumn":58},{"ruleId":"158","severity":1,"message":"173","line":31,"column":9,"nodeType":"160","messageId":"161","endLine":31,"endColumn":14},{"ruleId":"158","severity":1,"message":"165","line":34,"column":9,"nodeType":"160","messageId":"161","endLine":34,"endColumn":17},{"ruleId":"158","severity":1,"message":"166","line":35,"column":9,"nodeType":"160","messageId":"161","endLine":35,"endColumn":16},{"ruleId":"158","severity":1,"message":"167","line":38,"column":9,"nodeType":"160","messageId":"161","endLine":38,"endColumn":21},{"ruleId":"168","severity":1,"message":"174","line":81,"column":8,"nodeType":"170","endLine":81,"endColumn":10,"suggestions":"175"},{"ruleId":"158","severity":1,"message":"176","line":1,"column":27,"nodeType":"160","messageId":"161","endLine":1,"endColumn":36},{"ruleId":"158","severity":1,"message":"177","line":15,"column":12,"nodeType":"160","messageId":"161","endLine":15,"endColumn":17},{"ruleId":"158","severity":1,"message":"178","line":15,"column":19,"nodeType":"160","messageId":"161","endLine":15,"endColumn":27},{"ruleId":"179","severity":1,"message":"180","line":30,"column":35,"nodeType":"181","messageId":"182","endLine":30,"endColumn":37},{"ruleId":"183","severity":1,"message":"184","line":10,"column":13,"nodeType":"185","endLine":15,"endColumn":15},{"ruleId":"158","severity":1,"message":"186","line":4,"column":21,"nodeType":"160","messageId":"161","endLine":4,"endColumn":29},{"ruleId":"168","severity":1,"message":"187","line":54,"column":8,"nodeType":"170","endLine":54,"endColumn":10,"suggestions":"188"},{"ruleId":"158","severity":1,"message":"189","line":59,"column":13,"nodeType":"160","messageId":"161","endLine":59,"endColumn":21},{"ruleId":"179","severity":1,"message":"180","line":93,"column":30,"nodeType":"181","messageId":"182","endLine":93,"endColumn":32},{"ruleId":"154","replacedBy":"190"},{"ruleId":"156","replacedBy":"191"},"no-native-reassign",["192"],"no-negated-in-lhs",["193"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","'Link' is defined but never used.","'role' is assigned a value but never used.","'updateProduct' is defined but never used.","'category' is assigned a value but never used.","'loading' is assigned a value but never used.","'getaRedirect' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'preload'. Either include it or remove the dependency array.","ArrayExpression",["194"],"'updateCategory' is defined but never used.","'photo' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'match.params.productId' and 'preload'. Either include them or remove the dependency array.",["195"],"'useEffect' is defined but never used.","'count' is assigned a value but never used.","'setCount' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'loadCart' is defined but never used.","React Hook useEffect has missing dependencies: 'token' and 'userId'. Either include them or remove the dependency array.",["196"],"'getNonce' is assigned a value but never used.",["192"],["193"],"no-global-assign","no-unsafe-negation",{"desc":"197","fix":"198"},{"desc":"199","fix":"200"},{"desc":"201","fix":"202"},"Update the dependencies array to be: [preload]",{"range":"203","text":"204"},"Update the dependencies array to be: [match.params.productId, preload]",{"range":"205","text":"206"},"Update the dependencies array to be: [token, userId]",{"range":"207","text":"208"},[1330,1332],"[preload]",[2129,2131],"[match.params.productId, preload]",[2043,2045],"[token, userId]"]